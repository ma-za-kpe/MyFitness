plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
//    id 'com.google.gms.google-services'
//    id 'com.google.firebase.crashlytics'
//    id 'com.google.firebase.firebase-perf'
}

android {
    namespace 'com.maku.myfitness'
    compileSdk 33

    defaultConfig {
        applicationId "com.maku.myfitness"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "0.0.1" // X.Y.Z; X = Major, Y = minor, Z = Patch level

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        freeCompilerArgs = [
                "-opt-in=kotlin.RequiresOptIn",
                // Enable experimental coroutines APIs, including Flow
                "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-opt-in=kotlinx.coroutines.FlowPreview",
                "-opt-in=kotlin.Experimental",
                // Enable experimental accompanist APIs and others,
                "-opt-in=kotlin.ExperimentalUnsignedTypes",
                "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-opt-in=kotlinx.coroutines.InternalCoroutinesApi",
                "-opt-in=androidx.compose.animation.ExperimentalAnimationApi",
                "-opt-in=androidx.compose.ExperimentalComposeApi",
                "-opt-in=androidx.compose.foundation.layout.ExperimentalLayoutApi",
                "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api",
                "-opt-in=androidx.compose.runtime.ExperimentalComposeApi",
                "-opt-in=androidx.compose.ui.ExperimentalComposeUiApi",
                "-opt-in=androidx.compose.material3.windowsizeclass.ExperimentalMaterial3WindowSizeClassApi",
                "-opt-in=coil.annotation.ExperimentalCoilApi",
                "-opt-in=kotlinx.serialization.ExperimentalSerializationApi",
                "-opt-in=com.google.accompanist.pager.ExperimentalPagerApi"
        ]
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {


    implementation "com.google.accompanist:accompanist-drawablepainter:0.25.1"

    // view pager
    implementation "com.google.accompanist:accompanist-pager:0.28.0"

    // TODO: remove what you dont need

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    // added implementations
    implementation 'androidx.core:core-splashscreen:1.0.0'

    implementation 'androidx.exifinterface:exifinterface:1.3.5'
    implementation 'androidx.browser:browser:1.4.0'
    implementation 'androidx.media:media:1.6.0'

    // mine
    // junk stats
    implementation "androidx.metrics:metrics-performance:$metrics_performance"
    // Firebase
    // Import the Firebase BoM
//    implementation platform("com.google.firebase:firebase-bom:$firebase_bom")
//    implementation 'com.google.firebase:firebase-crashlytics-ktx'
//    implementation 'com.google.firebase:firebase-analytics-ktx'
//    implementation 'com.google.firebase:firebase-auth-ktx'
//    implementation 'com.google.firebase:firebase-firestore-ktx'
//    implementation 'com.google.firebase:firebase-perf-ktx'
//    implementation 'com.google.firebase:firebase-config-ktx'
//    implementation 'com.google.firebase:firebase-storage-ktx'

    // Google Play services library and specify its version
    implementation "com.google.android.gms:play-services-auth:$play_services_auth"

    // insets
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"

    // system ui controller
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    // constraint layout
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraintlayout_compose"

    // Splash Screen
    implementation "androidx.core:core-splashscreen:$core_splashscreen"

    // Pager and Indicators - Accompanist
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"

    // DataStore Preferences
    implementation("androidx.datastore:datastore-preferences:$datastore_preferences")

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:$nav_version")

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_core"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_android"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_android"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose"

    // Concurrency
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    // Cache
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_compiler"

    // logging
    implementation "com.jakewharton.timber:timber:$timber"

    // coil
    implementation("io.coil-kt:coil-compose:$coil_compose")

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_ktx")

    // life cycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx"

    // core
    implementation "androidx.core:core-ktx:$core_ktx"

    // tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"

    // compose
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material3:material3:$compose_material3"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

}